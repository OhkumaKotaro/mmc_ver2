ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** #include "global.h"
  40:Src/stm32f4xx_it.c **** #include "adc.h"
  41:Src/stm32f4xx_it.c **** #include "filter.h"
  42:Src/stm32f4xx_it.c **** #include "tim.h"
  43:Src/stm32f4xx_it.c **** #include "spi.h"
  44:Src/stm32f4xx_it.c **** #include "control.h"
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** unsigned char count_tim5=0;
  47:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  50:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /******************************************************************************/
  53:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  54:Src/stm32f4xx_it.c **** /******************************************************************************/
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /**
  57:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  58:Src/stm32f4xx_it.c **** */
  59:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  60:Src/stm32f4xx_it.c **** {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  61:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  64:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  67:Src/stm32f4xx_it.c **** }
  33              		.loc 1 67 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB127:
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c **** /**
  70:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 3


  71:Src/stm32f4xx_it.c **** */
  72:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  73:Src/stm32f4xx_it.c **** {
  48              		.loc 1 73 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE127:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB128:
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   while (1)
  78:Src/stm32f4xx_it.c ****   {
  79:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  80:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  81:Src/stm32f4xx_it.c ****   }
  82:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  83:Src/stm32f4xx_it.c **** 
  84:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  85:Src/stm32f4xx_it.c **** }
  86:Src/stm32f4xx_it.c **** 
  87:Src/stm32f4xx_it.c **** /**
  88:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  89:Src/stm32f4xx_it.c **** */
  90:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  91:Src/stm32f4xx_it.c **** {
  69              		.loc 1 91 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE128:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 4


  88              	BusFault_Handler:
  89              	.LFB129:
  92:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  95:Src/stm32f4xx_it.c ****   while (1)
  96:Src/stm32f4xx_it.c ****   {
  97:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  98:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  99:Src/stm32f4xx_it.c ****   }
 100:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 101:Src/stm32f4xx_it.c **** 
 102:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 103:Src/stm32f4xx_it.c **** }
 104:Src/stm32f4xx_it.c **** 
 105:Src/stm32f4xx_it.c **** /**
 106:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 107:Src/stm32f4xx_it.c **** */
 108:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 109:Src/stm32f4xx_it.c **** {
  90              		.loc 1 109 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE129:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB130:
 110:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 113:Src/stm32f4xx_it.c ****   while (1)
 114:Src/stm32f4xx_it.c ****   {
 115:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 116:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 117:Src/stm32f4xx_it.c ****   }
 118:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 119:Src/stm32f4xx_it.c **** 
 120:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 121:Src/stm32f4xx_it.c **** }
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c **** /**
 124:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 125:Src/stm32f4xx_it.c **** */
 126:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 127:Src/stm32f4xx_it.c **** {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 5


 111              		.loc 1 127 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE130:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	SVC_Handler:
 131              	.LFB131:
 128:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****   while (1)
 132:Src/stm32f4xx_it.c ****   {
 133:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 134:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 135:Src/stm32f4xx_it.c ****   }
 136:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 137:Src/stm32f4xx_it.c **** 
 138:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 139:Src/stm32f4xx_it.c **** }
 140:Src/stm32f4xx_it.c **** 
 141:Src/stm32f4xx_it.c **** /**
 142:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 143:Src/stm32f4xx_it.c **** */
 144:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 145:Src/stm32f4xx_it.c **** {
 132              		.loc 1 145 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 146:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Src/stm32f4xx_it.c **** 
 148:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Src/stm32f4xx_it.c **** 
 151:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Src/stm32f4xx_it.c **** }
 137              		.loc 1 152 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE131:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 6


 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB132:
 153:Src/stm32f4xx_it.c **** 
 154:Src/stm32f4xx_it.c **** /**
 155:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 156:Src/stm32f4xx_it.c **** */
 157:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 158:Src/stm32f4xx_it.c **** {
 152              		.loc 1 158 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 159:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Src/stm32f4xx_it.c **** 
 161:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Src/stm32f4xx_it.c **** 
 164:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Src/stm32f4xx_it.c **** }
 157              		.loc 1 165 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE132:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB133:
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c **** /**
 168:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 169:Src/stm32f4xx_it.c **** */
 170:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 171:Src/stm32f4xx_it.c **** {
 172              		.loc 1 171 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 172:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Src/stm32f4xx_it.c **** 
 174:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 177              		.loc 1 178 0
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 7


 180              	.LFE133:
 182              		.section	.text.SysTick_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	SysTick_Handler:
 191              	.LFB134:
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /**
 181:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 182:Src/stm32f4xx_it.c **** */
 183:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32f4xx_it.c **** {
 192              		.loc 1 184 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 10B5     		push	{r4, lr}
 197              	.LCFI0:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 185:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Src/stm32f4xx_it.c ****   HAL_IncTick();
 201              		.loc 1 188 0
 202 0002 FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL0:
 189:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 204              		.loc 1 189 0
 205 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 206              	.LVL1:
 190:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32f4xx_it.c ****   Update_gyro(flag.gyro_calc);
 207              		.loc 1 191 0
 208 000a 094C     		ldr	r4, .L17
 209 000c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 210 000e FFF7FEFF 		bl	Update_gyro
 211              	.LVL2:
 192:Src/stm32f4xx_it.c ****   update_encoder();
 212              		.loc 1 192 0
 213 0012 FFF7FEFF 		bl	update_encoder
 214              	.LVL3:
 193:Src/stm32f4xx_it.c ****   update_batt_date();
 215              		.loc 1 193 0
 216 0016 FFF7FEFF 		bl	update_batt_date
 217              	.LVL4:
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c ****   if(flag.straight==ON){
 218              		.loc 1 195 0
 219 001a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 220 001c DBB2     		uxtb	r3, r3
 221 001e 012B     		cmp	r3, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 8


 222 0020 02D0     		beq	.L16
 223              	.L14:
 196:Src/stm32f4xx_it.c ****     Straight_SysTic_fb();
 197:Src/stm32f4xx_it.c ****   }
 198:Src/stm32f4xx_it.c ****   Control_pwm();
 224              		.loc 1 198 0
 225 0022 FFF7FEFF 		bl	Control_pwm
 226              	.LVL5:
 199:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 200:Src/stm32f4xx_it.c **** }
 227              		.loc 1 200 0
 228 0026 10BD     		pop	{r4, pc}
 229              	.L16:
 196:Src/stm32f4xx_it.c ****     Straight_SysTic_fb();
 230              		.loc 1 196 0
 231 0028 FFF7FEFF 		bl	Straight_SysTic_fb
 232              	.LVL6:
 233 002c F9E7     		b	.L14
 234              	.L18:
 235 002e 00BF     		.align	2
 236              	.L17:
 237 0030 00000000 		.word	flag
 238              		.cfi_endproc
 239              	.LFE134:
 241              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	TIM5_IRQHandler
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	TIM5_IRQHandler:
 250              	.LFB135:
 201:Src/stm32f4xx_it.c **** 
 202:Src/stm32f4xx_it.c **** /******************************************************************************/
 203:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 204:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 205:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 206:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 207:Src/stm32f4xx_it.c **** /******************************************************************************/
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c **** /**
 210:Src/stm32f4xx_it.c **** * @brief This function handles TIM5 global interrupt.
 211:Src/stm32f4xx_it.c **** */
 212:Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 213:Src/stm32f4xx_it.c **** {
 251              		.loc 1 213 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI1:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 214:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 215:Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 9


 216:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 217:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 260              		.loc 1 217 0
 261 0002 1E48     		ldr	r0, .L33
 262 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 263              	.LVL7:
 218:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 219:Src/stm32f4xx_it.c ****   if(flag.ir_led==TRUE){
 264              		.loc 1 219 0
 265 0008 1D4B     		ldr	r3, .L33+4
 266 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 267 000c DBB2     		uxtb	r3, r3
 268 000e 012B     		cmp	r3, #1
 269 0010 30D1     		bne	.L20
 220:Src/stm32f4xx_it.c ****     count_tim5++;
 270              		.loc 1 220 0
 271 0012 1C4A     		ldr	r2, .L33+8
 272 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 273 0016 0133     		adds	r3, r3, #1
 274 0018 DBB2     		uxtb	r3, r3
 275 001a 1370     		strb	r3, [r2]
 221:Src/stm32f4xx_it.c ****     switch(count_tim5){
 276              		.loc 1 221 0
 277 001c 013B     		subs	r3, r3, #1
 278 001e 072B     		cmp	r3, #7
 279 0020 24D8     		bhi	.L21
 280 0022 DFE803F0 		tbb	[pc, r3]
 281              	.L23:
 282 0026 04       		.byte	(.L22-.L23)/2
 283 0027 07       		.byte	(.L24-.L23)/2
 284 0028 0B       		.byte	(.L25-.L23)/2
 285 0029 10       		.byte	(.L26-.L23)/2
 286 002a 13       		.byte	(.L27-.L23)/2
 287 002b 17       		.byte	(.L28-.L23)/2
 288 002c 1A       		.byte	(.L29-.L23)/2
 289 002d 1D       		.byte	(.L30-.L23)/2
 290              		.p2align 1
 291              	.L22:
 222:Src/stm32f4xx_it.c ****       case 1:
 223:Src/stm32f4xx_it.c ****         update_side_sen_off();
 292              		.loc 1 223 0
 293 002e FFF7FEFF 		bl	update_side_sen_off
 294              	.LVL8:
 224:Src/stm32f4xx_it.c ****         break;
 295              		.loc 1 224 0
 296 0032 21E0     		b	.L19
 297              	.L24:
 225:Src/stm32f4xx_it.c ****       case 2:
 226:Src/stm32f4xx_it.c ****         IR_Contoroll(0b0110);
 298              		.loc 1 226 0
 299 0034 0620     		movs	r0, #6
 300 0036 FFF7FEFF 		bl	IR_Contoroll
 301              	.LVL9:
 227:Src/stm32f4xx_it.c ****         break;
 302              		.loc 1 227 0
 303 003a 1DE0     		b	.L19
 304              	.L25:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 10


 228:Src/stm32f4xx_it.c ****       case 3:
 229:Src/stm32f4xx_it.c ****         update_side_sen_on();
 305              		.loc 1 229 0
 306 003c FFF7FEFF 		bl	update_side_sen_on
 307              	.LVL10:
 230:Src/stm32f4xx_it.c ****         All_IR_OFF();
 308              		.loc 1 230 0
 309 0040 FFF7FEFF 		bl	All_IR_OFF
 310              	.LVL11:
 231:Src/stm32f4xx_it.c ****         break;
 311              		.loc 1 231 0
 312 0044 18E0     		b	.L19
 313              	.L26:
 232:Src/stm32f4xx_it.c ****       case 4:
 233:Src/stm32f4xx_it.c ****         update_front_sen_off();
 314              		.loc 1 233 0
 315 0046 FFF7FEFF 		bl	update_front_sen_off
 316              	.LVL12:
 234:Src/stm32f4xx_it.c ****         break;
 317              		.loc 1 234 0
 318 004a 15E0     		b	.L19
 319              	.L27:
 235:Src/stm32f4xx_it.c ****       case 5:
 236:Src/stm32f4xx_it.c ****         IR_Contoroll(0b1001);
 320              		.loc 1 236 0
 321 004c 0920     		movs	r0, #9
 322 004e FFF7FEFF 		bl	IR_Contoroll
 323              	.LVL13:
 237:Src/stm32f4xx_it.c ****         break;
 324              		.loc 1 237 0
 325 0052 11E0     		b	.L19
 326              	.L28:
 238:Src/stm32f4xx_it.c ****       case 6:
 239:Src/stm32f4xx_it.c ****         update_front_sen_on();
 327              		.loc 1 239 0
 328 0054 FFF7FEFF 		bl	update_front_sen_on
 329              	.LVL14:
 240:Src/stm32f4xx_it.c ****         break;
 330              		.loc 1 240 0
 331 0058 0EE0     		b	.L19
 332              	.L29:
 241:Src/stm32f4xx_it.c ****       case 7:
 242:Src/stm32f4xx_it.c ****         All_IR_OFF();
 333              		.loc 1 242 0
 334 005a FFF7FEFF 		bl	All_IR_OFF
 335              	.LVL15:
 243:Src/stm32f4xx_it.c ****         break;
 336              		.loc 1 243 0
 337 005e 0BE0     		b	.L19
 338              	.L30:
 244:Src/stm32f4xx_it.c ****       case 8:
 245:Src/stm32f4xx_it.c ****         update_wall();
 339              		.loc 1 245 0
 340 0060 FFF7FEFF 		bl	update_wall
 341              	.LVL16:
 246:Src/stm32f4xx_it.c ****         count_tim5 = 0;
 342              		.loc 1 246 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 11


 343 0064 074B     		ldr	r3, .L33+8
 344 0066 0022     		movs	r2, #0
 345 0068 1A70     		strb	r2, [r3]
 247:Src/stm32f4xx_it.c ****         break;
 346              		.loc 1 247 0
 347 006a 05E0     		b	.L19
 348              	.L21:
 248:Src/stm32f4xx_it.c ****       default:
 249:Src/stm32f4xx_it.c ****         count_tim5 = 0;
 349              		.loc 1 249 0
 350 006c 054B     		ldr	r3, .L33+8
 351 006e 0022     		movs	r2, #0
 352 0070 1A70     		strb	r2, [r3]
 250:Src/stm32f4xx_it.c ****         break;
 353              		.loc 1 250 0
 354 0072 01E0     		b	.L19
 355              	.L20:
 251:Src/stm32f4xx_it.c ****     }
 252:Src/stm32f4xx_it.c ****   }else{
 253:Src/stm32f4xx_it.c ****     All_IR_OFF();
 356              		.loc 1 253 0
 357 0074 FFF7FEFF 		bl	All_IR_OFF
 358              	.LVL17:
 359              	.L19:
 254:Src/stm32f4xx_it.c ****   }
 255:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 256:Src/stm32f4xx_it.c **** }
 360              		.loc 1 256 0
 361 0078 08BD     		pop	{r3, pc}
 362              	.L34:
 363 007a 00BF     		.align	2
 364              	.L33:
 365 007c 00000000 		.word	htim5
 366 0080 00000000 		.word	flag
 367 0084 00000000 		.word	.LANCHOR0
 368              		.cfi_endproc
 369              	.LFE135:
 371              		.global	count_tim5
 372              		.section	.bss.count_tim5,"aw",%nobits
 373              		.set	.LANCHOR0,. + 0
 376              	count_tim5:
 377 0000 00       		.space	1
 378              		.text
 379              	.Letext0:
 380              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 381              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 382              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 383              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 384              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 385              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 386              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 387              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 388              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 389              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 390              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 391              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 392              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 12


 393              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 394              		.file 16 "Inc/global.h"
 395              		.file 17 "Inc/adc.h"
 396              		.file 18 "Inc/tim.h"
 397              		.file 19 "Inc/spi.h"
 398              		.file 20 "Inc/filter.h"
 399              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 400              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 401              		.file 23 "Inc/control.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:18     .text.NMI_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:60     .text.MemManage_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:67     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:81     .text.BusFault_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:88     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:102    .text.UsageFault_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:109    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:123    .text.SVC_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:130    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:143    .text.DebugMon_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:150    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:163    .text.PendSV_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:170    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:183    .text.SysTick_Handler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:190    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:237    .text.SysTick_Handler:00000030 $d
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:242    .text.TIM5_IRQHandler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:249    .text.TIM5_IRQHandler:00000000 TIM5_IRQHandler
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:282    .text.TIM5_IRQHandler:00000026 $d
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:290    .text.TIM5_IRQHandler:0000002e $t
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:365    .text.TIM5_IRQHandler:0000007c $d
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:376    .bss.count_tim5:00000000 count_tim5
C:\Users\kotaro\AppData\Local\Temp\ccy5rX3G.s:377    .bss.count_tim5:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
Update_gyro
update_encoder
update_batt_date
Control_pwm
Straight_SysTic_fb
flag
HAL_TIM_IRQHandler
update_side_sen_off
IR_Contoroll
update_side_sen_on
All_IR_OFF
update_front_sen_off
update_front_sen_on
update_wall
htim5
